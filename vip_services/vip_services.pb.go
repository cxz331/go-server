// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vip_services.proto

/*
Package vip_services is a generated protocol buffer package.

It is generated from these files:
	vip_services.proto

It has these top-level messages:
	ApplyIdRequest
	ApplyIdReply
	ApplyUidRequest
	ApplyUidReply
*/
package vip_services

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ApplyIdRequest struct {
	ApplyId int32 `protobuf:"varint,1,opt,name=apply_id,json=applyId" json:"apply_id,omitempty"`
}

func (m *ApplyIdRequest) Reset()                    { *m = ApplyIdRequest{} }
func (m *ApplyIdRequest) String() string            { return proto.CompactTextString(m) }
func (*ApplyIdRequest) ProtoMessage()               {}
func (*ApplyIdRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ApplyIdRequest) GetApplyId() int32 {
	if m != nil {
		return m.ApplyId
	}
	return 0
}

type ApplyIdReply struct {
	ApplyInfo string `protobuf:"bytes,1,opt,name=apply_info,json=applyInfo" json:"apply_info,omitempty"`
}

func (m *ApplyIdReply) Reset()                    { *m = ApplyIdReply{} }
func (m *ApplyIdReply) String() string            { return proto.CompactTextString(m) }
func (*ApplyIdReply) ProtoMessage()               {}
func (*ApplyIdReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ApplyIdReply) GetApplyInfo() string {
	if m != nil {
		return m.ApplyInfo
	}
	return ""
}

type ApplyUidRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *ApplyUidRequest) Reset()                    { *m = ApplyUidRequest{} }
func (m *ApplyUidRequest) String() string            { return proto.CompactTextString(m) }
func (*ApplyUidRequest) ProtoMessage()               {}
func (*ApplyUidRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ApplyUidRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ApplyUidReply struct {
	ApplyInfo string `protobuf:"bytes,1,opt,name=apply_info,json=applyInfo" json:"apply_info,omitempty"`
}

func (m *ApplyUidReply) Reset()                    { *m = ApplyUidReply{} }
func (m *ApplyUidReply) String() string            { return proto.CompactTextString(m) }
func (*ApplyUidReply) ProtoMessage()               {}
func (*ApplyUidReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ApplyUidReply) GetApplyInfo() string {
	if m != nil {
		return m.ApplyInfo
	}
	return ""
}

func init() {
	proto.RegisterType((*ApplyIdRequest)(nil), "vip_services.ApplyIdRequest")
	proto.RegisterType((*ApplyIdReply)(nil), "vip_services.ApplyIdReply")
	proto.RegisterType((*ApplyUidRequest)(nil), "vip_services.ApplyUidRequest")
	proto.RegisterType((*ApplyUidReply)(nil), "vip_services.ApplyUidReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DoumiBApply service

type DoumiBApplyClient interface {
	// Sends a greeting
	GetOneByApplyId(ctx context.Context, in *ApplyIdRequest, opts ...grpc.CallOption) (*ApplyIdReply, error)
	GetAllByApplyUid(ctx context.Context, in *ApplyUidRequest, opts ...grpc.CallOption) (*ApplyUidReply, error)
}

type doumiBApplyClient struct {
	cc *grpc.ClientConn
}

func NewDoumiBApplyClient(cc *grpc.ClientConn) DoumiBApplyClient {
	return &doumiBApplyClient{cc}
}

func (c *doumiBApplyClient) GetOneByApplyId(ctx context.Context, in *ApplyIdRequest, opts ...grpc.CallOption) (*ApplyIdReply, error) {
	out := new(ApplyIdReply)
	err := grpc.Invoke(ctx, "/vip_services.DoumiBApply/GetOneByApplyId", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *doumiBApplyClient) GetAllByApplyUid(ctx context.Context, in *ApplyUidRequest, opts ...grpc.CallOption) (*ApplyUidReply, error) {
	out := new(ApplyUidReply)
	err := grpc.Invoke(ctx, "/vip_services.DoumiBApply/GetAllByApplyUid", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DoumiBApply service

type DoumiBApplyServer interface {
	// Sends a greeting
	GetOneByApplyId(context.Context, *ApplyIdRequest) (*ApplyIdReply, error)
	GetAllByApplyUid(context.Context, *ApplyUidRequest) (*ApplyUidReply, error)
}

func RegisterDoumiBApplyServer(s *grpc.Server, srv DoumiBApplyServer) {
	s.RegisterService(&_DoumiBApply_serviceDesc, srv)
}

func _DoumiBApply_GetOneByApplyId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DoumiBApplyServer).GetOneByApplyId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vip_services.DoumiBApply/GetOneByApplyId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DoumiBApplyServer).GetOneByApplyId(ctx, req.(*ApplyIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DoumiBApply_GetAllByApplyUid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplyUidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DoumiBApplyServer).GetAllByApplyUid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vip_services.DoumiBApply/GetAllByApplyUid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DoumiBApplyServer).GetAllByApplyUid(ctx, req.(*ApplyUidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DoumiBApply_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vip_services.DoumiBApply",
	HandlerType: (*DoumiBApplyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOneByApplyId",
			Handler:    _DoumiBApply_GetOneByApplyId_Handler,
		},
		{
			MethodName: "GetAllByApplyUid",
			Handler:    _DoumiBApply_GetAllByApplyUid_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vip_services.proto",
}

func init() { proto.RegisterFile("vip_services.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2a, 0xcb, 0x2c, 0x88,
	0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x41, 0x16, 0x53, 0xd2, 0xe6, 0xe2, 0x73, 0x2c, 0x28, 0xc8, 0xa9, 0xf4, 0x4c, 0x09, 0x4a, 0x2d,
	0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe4, 0xe2, 0x48, 0x04, 0x89, 0xc4, 0x67, 0xa6, 0x48, 0x30,
	0x2a, 0x30, 0x6a, 0xb0, 0x06, 0xb1, 0x27, 0x42, 0x54, 0x28, 0xe9, 0x72, 0xf1, 0xc0, 0x15, 0x17,
	0xe4, 0x54, 0x0a, 0xc9, 0x72, 0x71, 0x41, 0x95, 0xe6, 0xa5, 0xe5, 0x83, 0x15, 0x73, 0x06, 0x71,
	0x42, 0x14, 0xe7, 0xa5, 0xe5, 0x2b, 0x69, 0x71, 0xf1, 0x83, 0x95, 0x87, 0x66, 0xc2, 0x0d, 0x17,
	0xe7, 0x62, 0x2f, 0x2d, 0x4e, 0x2d, 0x82, 0x99, 0xcd, 0x19, 0xc4, 0x06, 0xe2, 0x7a, 0xa6, 0x28,
	0xe9, 0x71, 0xf1, 0x22, 0xd4, 0x12, 0x36, 0xdb, 0x68, 0x1d, 0x23, 0x17, 0xb7, 0x4b, 0x7e, 0x69,
	0x6e, 0xa6, 0x13, 0x58, 0x9b, 0x90, 0x2f, 0x17, 0xbf, 0x7b, 0x6a, 0x89, 0x7f, 0x5e, 0xaa, 0x53,
	0x25, 0xd4, 0x89, 0x42, 0x32, 0x7a, 0x28, 0xbe, 0x47, 0xf5, 0xa6, 0x94, 0x14, 0x0e, 0xd9, 0x82,
	0x9c, 0x4a, 0x25, 0x06, 0xa1, 0x00, 0x2e, 0x01, 0xf7, 0xd4, 0x12, 0xc7, 0x9c, 0x1c, 0xa8, 0x71,
	0xa1, 0x99, 0x29, 0x42, 0xb2, 0x58, 0x74, 0x20, 0xbc, 0x26, 0x25, 0x8d, 0x4b, 0x1a, 0x6c, 0xa2,
	0x93, 0x10, 0x97, 0x40, 0x66, 0xbe, 0x5e, 0x7a, 0x51, 0x41, 0xb2, 0x5e, 0x6a, 0x45, 0x62, 0x6e,
	0x41, 0x4e, 0x6a, 0x71, 0x12, 0x1b, 0x38, 0x46, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x33,
	0x41, 0x9b, 0xee, 0xa7, 0x01, 0x00, 0x00,
}
